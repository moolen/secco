// Code generated by protoc-gen-go. DO NOT EDIT.
// source: agent.proto

package agent

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RunTraceRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RunTraceRequest) Reset()         { *m = RunTraceRequest{} }
func (m *RunTraceRequest) String() string { return proto.CompactTextString(m) }
func (*RunTraceRequest) ProtoMessage()    {}
func (*RunTraceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_56ede974c0020f77, []int{0}
}

func (m *RunTraceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RunTraceRequest.Unmarshal(m, b)
}
func (m *RunTraceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RunTraceRequest.Marshal(b, m, deterministic)
}
func (m *RunTraceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RunTraceRequest.Merge(m, src)
}
func (m *RunTraceRequest) XXX_Size() int {
	return xxx_messageInfo_RunTraceRequest.Size(m)
}
func (m *RunTraceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RunTraceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RunTraceRequest proto.InternalMessageInfo

func (m *RunTraceRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type RunTraceResponse struct {
	Syscalls             map[string]int64 `protobuf:"bytes,3,rep,name=syscalls,proto3" json:"syscalls,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *RunTraceResponse) Reset()         { *m = RunTraceResponse{} }
func (m *RunTraceResponse) String() string { return proto.CompactTextString(m) }
func (*RunTraceResponse) ProtoMessage()    {}
func (*RunTraceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_56ede974c0020f77, []int{1}
}

func (m *RunTraceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RunTraceResponse.Unmarshal(m, b)
}
func (m *RunTraceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RunTraceResponse.Marshal(b, m, deterministic)
}
func (m *RunTraceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RunTraceResponse.Merge(m, src)
}
func (m *RunTraceResponse) XXX_Size() int {
	return xxx_messageInfo_RunTraceResponse.Size(m)
}
func (m *RunTraceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RunTraceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RunTraceResponse proto.InternalMessageInfo

func (m *RunTraceResponse) GetSyscalls() map[string]int64 {
	if m != nil {
		return m.Syscalls
	}
	return nil
}

func init() {
	proto.RegisterType((*RunTraceRequest)(nil), "agent.RunTraceRequest")
	proto.RegisterType((*RunTraceResponse)(nil), "agent.RunTraceResponse")
	proto.RegisterMapType((map[string]int64)(nil), "agent.RunTraceResponse.SyscallsEntry")
}

func init() {
	proto.RegisterFile("agent.proto", fileDescriptor_56ede974c0020f77)
}

var fileDescriptor_56ede974c0020f77 = []byte{
	// 199 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4e, 0x4c, 0x4f, 0xcd,
	0x2b, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x05, 0x73, 0x94, 0x14, 0xb9, 0xf8, 0x83,
	0x4a, 0xf3, 0x42, 0x8a, 0x12, 0x93, 0x53, 0x83, 0x52, 0x0b, 0x4b, 0x53, 0x8b, 0x4b, 0x84, 0xf8,
	0xb8, 0x98, 0x32, 0x53, 0x24, 0x18, 0x15, 0x18, 0x35, 0x38, 0x83, 0x98, 0x32, 0x53, 0x94, 0x26,
	0x31, 0x72, 0x09, 0x20, 0xd4, 0x14, 0x17, 0xe4, 0xe7, 0x15, 0xa7, 0x0a, 0x39, 0x72, 0x71, 0x14,
	0x57, 0x16, 0x27, 0x27, 0xe6, 0xe4, 0x14, 0x4b, 0x30, 0x2b, 0x30, 0x6b, 0x70, 0x1b, 0xa9, 0xea,
	0x41, 0x8c, 0x47, 0x57, 0xaa, 0x17, 0x0c, 0x55, 0xe7, 0x9a, 0x57, 0x52, 0x54, 0x19, 0x04, 0xd7,
	0x26, 0x65, 0xcd, 0xc5, 0x8b, 0x22, 0x25, 0x24, 0xc0, 0xc5, 0x9c, 0x9d, 0x5a, 0x09, 0xb5, 0x19,
	0xc4, 0x14, 0x12, 0xe1, 0x62, 0x2d, 0x4b, 0xcc, 0x29, 0x4d, 0x95, 0x60, 0x52, 0x60, 0xd4, 0x60,
	0x0e, 0x82, 0x70, 0xac, 0x98, 0x2c, 0x18, 0x8d, 0x3c, 0xb8, 0x58, 0x1d, 0x41, 0xd6, 0x09, 0xd9,
	0x73, 0x71, 0xc0, 0x6c, 0x14, 0x12, 0xc3, 0x70, 0x02, 0xd8, 0x47, 0x52, 0xe2, 0x38, 0x9c, 0xa6,
	0xc4, 0x60, 0xc0, 0x98, 0xc4, 0x06, 0x0e, 0x0f, 0x63, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0x08,
	0x8b, 0x79, 0xca, 0x1e, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// AgentClient is the client API for Agent service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AgentClient interface {
	RunTrace(ctx context.Context, in *RunTraceRequest, opts ...grpc.CallOption) (Agent_RunTraceClient, error)
}

type agentClient struct {
	cc grpc.ClientConnInterface
}

func NewAgentClient(cc grpc.ClientConnInterface) AgentClient {
	return &agentClient{cc}
}

func (c *agentClient) RunTrace(ctx context.Context, in *RunTraceRequest, opts ...grpc.CallOption) (Agent_RunTraceClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Agent_serviceDesc.Streams[0], "/agent.Agent/RunTrace", opts...)
	if err != nil {
		return nil, err
	}
	x := &agentRunTraceClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Agent_RunTraceClient interface {
	Recv() (*RunTraceResponse, error)
	grpc.ClientStream
}

type agentRunTraceClient struct {
	grpc.ClientStream
}

func (x *agentRunTraceClient) Recv() (*RunTraceResponse, error) {
	m := new(RunTraceResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// AgentServer is the server API for Agent service.
type AgentServer interface {
	RunTrace(*RunTraceRequest, Agent_RunTraceServer) error
}

// UnimplementedAgentServer can be embedded to have forward compatible implementations.
type UnimplementedAgentServer struct {
}

func (*UnimplementedAgentServer) RunTrace(req *RunTraceRequest, srv Agent_RunTraceServer) error {
	return status.Errorf(codes.Unimplemented, "method RunTrace not implemented")
}

func RegisterAgentServer(s *grpc.Server, srv AgentServer) {
	s.RegisterService(&_Agent_serviceDesc, srv)
}

func _Agent_RunTrace_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(RunTraceRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(AgentServer).RunTrace(m, &agentRunTraceServer{stream})
}

type Agent_RunTraceServer interface {
	Send(*RunTraceResponse) error
	grpc.ServerStream
}

type agentRunTraceServer struct {
	grpc.ServerStream
}

func (x *agentRunTraceServer) Send(m *RunTraceResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _Agent_serviceDesc = grpc.ServiceDesc{
	ServiceName: "agent.Agent",
	HandlerType: (*AgentServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "RunTrace",
			Handler:       _Agent_RunTrace_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "agent.proto",
}
